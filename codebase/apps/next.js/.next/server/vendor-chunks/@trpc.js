"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trpc";
exports.ids = ["vendor-chunks/@trpc"];
exports.modules = {

/***/ "(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs":
/*!*******************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCError),\n/* harmony export */   g: () => (/* binding */ getTRPCErrorFromUnknown)\n/* harmony export */ });\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\nfunction getTRPCErrorFromUnknown(cause) {\n    if (cause instanceof TRPCError) {\n        return cause;\n    }\n    if (cause instanceof Error && cause.name === 'TRPCError') {\n        // https://github.com/trpc/trpc/pull/4848\n        return cause;\n    }\n    const trpcError = new TRPCError({\n        code: 'INTERNAL_SERVER_ERROR',\n        cause\n    });\n    // Inherit stack from error\n    if (cause instanceof Error && cause.stack) {\n        trpcError.stack = cause.stack;\n    }\n    return trpcError;\n}\nclass TRPCError extends Error {\n    constructor(opts){\n        const cause = (0,_getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(opts.cause);\n        const message = opts.message ?? cause?.message ?? opts.code;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.code = opts.code;\n        this.name = 'TRPCError';\n        if (!this.cause) {\n            // < ES2022 / < Node 16.9.0 compatability\n            this.cause = cause;\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L1RSUENFcnJvci05OGQ0NDc1OC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThFOztBQUU5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0VBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYm9pbGVycGxhdGUvbmV4dGpzLy4uLy4uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9UUlBDRXJyb3ItOThkNDQ3NTgubWpzPzk3NTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyBhcyBnZXRDYXVzZUZyb21Vbmtub3duIH0gZnJvbSAnLi9nZXRDYXVzZUZyb21Vbmtub3duLTJkNjY0MTRhLm1qcyc7XG5cbmZ1bmN0aW9uIGdldFRSUENFcnJvckZyb21Vbmtub3duKGNhdXNlKSB7XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgVFJQQ0Vycm9yKSB7XG4gICAgICAgIHJldHVybiBjYXVzZTtcbiAgICB9XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IgJiYgY2F1c2UubmFtZSA9PT0gJ1RSUENFcnJvcicpIHtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RycGMvdHJwYy9wdWxsLzQ4NDhcbiAgICAgICAgcmV0dXJuIGNhdXNlO1xuICAgIH1cbiAgICBjb25zdCB0cnBjRXJyb3IgPSBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgY29kZTogJ0lOVEVSTkFMX1NFUlZFUl9FUlJPUicsXG4gICAgICAgIGNhdXNlXG4gICAgfSk7XG4gICAgLy8gSW5oZXJpdCBzdGFjayBmcm9tIGVycm9yXG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IgJiYgY2F1c2Uuc3RhY2spIHtcbiAgICAgICAgdHJwY0Vycm9yLnN0YWNrID0gY2F1c2Uuc3RhY2s7XG4gICAgfVxuICAgIHJldHVybiB0cnBjRXJyb3I7XG59XG5jbGFzcyBUUlBDRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3Iob3B0cyl7XG4gICAgICAgIGNvbnN0IGNhdXNlID0gZ2V0Q2F1c2VGcm9tVW5rbm93bihvcHRzLmNhdXNlKTtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IG9wdHMubWVzc2FnZSA/PyBjYXVzZT8ubWVzc2FnZSA/PyBvcHRzLmNvZGU7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAgICAgLy8gQHRzLWlnbm9yZSBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1lcnJvci1jYXVzZVxuICAgICAgICBzdXBlcihtZXNzYWdlLCB7XG4gICAgICAgICAgICBjYXVzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb2RlID0gb3B0cy5jb2RlO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVFJQQ0Vycm9yJztcbiAgICAgICAgaWYgKCF0aGlzLmNhdXNlKSB7XG4gICAgICAgICAgICAvLyA8IEVTMjAyMiAvIDwgTm9kZSAxNi45LjAgY29tcGF0YWJpbGl0eVxuICAgICAgICAgICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBUUlBDRXJyb3IgYXMgVCwgZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24gYXMgZyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/adapters/fetch/index.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/adapters/fetch/index.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRequestHandler: () => (/* binding */ fetchRequestHandler)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index-f91d720c.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../resolveHTTPResponse-2fc435bb.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\");\n/* harmony import */ var _batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../batchStreamFormatter-fc1ffb26.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\");\n/* harmony import */ var _toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../toURL-8f0ea228.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../codes-c924c3db.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../config-d5fdbd39.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../TRPCError-98d44758.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../transformTRPCResponse-1153b421.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../contentType-9fd995d3.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nconst trimSlashes = (path)=>{\n    path = path.startsWith('/') ? path.slice(1) : path;\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path;\n};\nasync function fetchRequestHandler(opts) {\n    const resHeaders = new Headers();\n    const createContext = async ()=>{\n        return opts.createContext?.({\n            req: opts.req,\n            resHeaders\n        });\n    };\n    const url = (0,_toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__.t)(opts.req.url);\n    const pathname = trimSlashes(url.pathname);\n    const endpoint = trimSlashes(opts.endpoint);\n    const path = trimSlashes(pathname.slice(endpoint.length));\n    const req = {\n        query: url.searchParams,\n        method: opts.req.method,\n        headers: Object.fromEntries(opts.req.headers),\n        body: opts.req.headers.get('content-type')?.startsWith('application/json') ? await opts.req.text() : ''\n    };\n    let resolve;\n    const promise = new Promise((r)=>resolve = r);\n    let status = 200;\n    let isStream = false;\n    let controller;\n    let encoder;\n    let formatter;\n    const unstable_onHead = (head, isStreaming)=>{\n        for (const [key, value] of Object.entries(head.headers ?? {})){\n            /* istanbul ignore if -- @preserve */ if (typeof value === 'undefined') {\n                continue;\n            }\n            if (typeof value === 'string') {\n                resHeaders.set(key, value);\n                continue;\n            }\n            for (const v of value){\n                resHeaders.append(key, v);\n            }\n        }\n        status = head.status;\n        if (isStreaming) {\n            resHeaders.set('Transfer-Encoding', 'chunked');\n            resHeaders.append('Vary', 'trpc-batch-mode');\n            const stream = new ReadableStream({\n                start (c) {\n                    controller = c;\n                }\n            });\n            const response = new Response(stream, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n            encoder = new TextEncoder();\n            formatter = (0,_batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__.g)();\n            isStream = true;\n        }\n    };\n    const unstable_onChunk = ([index, string])=>{\n        if (index === -1) {\n            // full response, no streaming\n            const response = new Response(string || null, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n        } else {\n            controller.enqueue(encoder.encode(formatter(index, string)));\n        }\n    };\n    (0,_resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__.r)({\n        req,\n        createContext,\n        path,\n        router: opts.router,\n        batching: opts.batching,\n        responseMeta: opts.responseMeta,\n        onError (o) {\n            opts?.onError?.({\n                ...o,\n                req: opts.req\n            });\n        },\n        unstable_onHead,\n        unstable_onChunk\n    }).then(()=>{\n        if (isStream) {\n            controller.enqueue(encoder.encode(formatter.end()));\n            controller.close();\n        }\n    }).catch(()=>{\n        if (isStream) {\n            controller.close();\n        }\n    });\n    return promise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2FkYXB0ZXJzL2ZldGNoL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNnRDtBQUNLO0FBQ2pDO0FBQ3BCO0FBQ0M7QUFDRztBQUNVO0FBQ0U7QUFDVjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGdCQUFnQixzREFBSztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0Esd0JBQXdCLHFFQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsSUFBSSxvRUFBbUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGJvaWxlcnBsYXRlL25leHRqcy8uLi8uLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYWRhcHRlcnMvZmV0Y2gvaW5kZXgubWpzPzYyNmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi8uLi9pbmRleC1mOTFkNzIwYy5tanMnO1xuaW1wb3J0IHsgciBhcyByZXNvbHZlSFRUUFJlc3BvbnNlIH0gZnJvbSAnLi4vLi4vcmVzb2x2ZUhUVFBSZXNwb25zZS0yZmM0MzViYi5tanMnO1xuaW1wb3J0IHsgZyBhcyBnZXRCYXRjaFN0cmVhbUZvcm1hdHRlciB9IGZyb20gJy4uLy4uL2JhdGNoU3RyZWFtRm9ybWF0dGVyLWZjMWZmYjI2Lm1qcyc7XG5pbXBvcnQgeyB0IGFzIHRvVVJMIH0gZnJvbSAnLi4vLi4vdG9VUkwtOGYwZWEyMjgubWpzJztcbmltcG9ydCAnLi4vLi4vY29kZXMtYzkyNGMzZGIubWpzJztcbmltcG9ydCAnLi4vLi4vY29uZmlnLWQ1ZmRiZDM5Lm1qcyc7XG5pbXBvcnQgJy4uLy4uL1RSUENFcnJvci05OGQ0NDc1OC5tanMnO1xuaW1wb3J0ICcuLi8uLi9nZXRDYXVzZUZyb21Vbmtub3duLTJkNjY0MTRhLm1qcyc7XG5pbXBvcnQgJy4uLy4uL3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanMnO1xuaW1wb3J0ICcuLi8uLi9jb250ZW50VHlwZS05ZmQ5OTVkMy5tanMnO1xuXG5jb25zdCB0cmltU2xhc2hlcyA9IChwYXRoKT0+e1xuICAgIHBhdGggPSBwYXRoLnN0YXJ0c1dpdGgoJy8nKSA/IHBhdGguc2xpY2UoMSkgOiBwYXRoO1xuICAgIHBhdGggPSBwYXRoLmVuZHNXaXRoKCcvJykgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hSZXF1ZXN0SGFuZGxlcihvcHRzKSB7XG4gICAgY29uc3QgcmVzSGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgY29uc3QgY3JlYXRlQ29udGV4dCA9IGFzeW5jICgpPT57XG4gICAgICAgIHJldHVybiBvcHRzLmNyZWF0ZUNvbnRleHQ/Lih7XG4gICAgICAgICAgICByZXE6IG9wdHMucmVxLFxuICAgICAgICAgICAgcmVzSGVhZGVyc1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHVybCA9IHRvVVJMKG9wdHMucmVxLnVybCk7XG4gICAgY29uc3QgcGF0aG5hbWUgPSB0cmltU2xhc2hlcyh1cmwucGF0aG5hbWUpO1xuICAgIGNvbnN0IGVuZHBvaW50ID0gdHJpbVNsYXNoZXMob3B0cy5lbmRwb2ludCk7XG4gICAgY29uc3QgcGF0aCA9IHRyaW1TbGFzaGVzKHBhdGhuYW1lLnNsaWNlKGVuZHBvaW50Lmxlbmd0aCkpO1xuICAgIGNvbnN0IHJlcSA9IHtcbiAgICAgICAgcXVlcnk6IHVybC5zZWFyY2hQYXJhbXMsXG4gICAgICAgIG1ldGhvZDogb3B0cy5yZXEubWV0aG9kLFxuICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXMob3B0cy5yZXEuaGVhZGVycyksXG4gICAgICAgIGJvZHk6IG9wdHMucmVxLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKT8uc3RhcnRzV2l0aCgnYXBwbGljYXRpb24vanNvbicpID8gYXdhaXQgb3B0cy5yZXEudGV4dCgpIDogJydcbiAgICB9O1xuICAgIGxldCByZXNvbHZlO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocik9PnJlc29sdmUgPSByKTtcbiAgICBsZXQgc3RhdHVzID0gMjAwO1xuICAgIGxldCBpc1N0cmVhbSA9IGZhbHNlO1xuICAgIGxldCBjb250cm9sbGVyO1xuICAgIGxldCBlbmNvZGVyO1xuICAgIGxldCBmb3JtYXR0ZXI7XG4gICAgY29uc3QgdW5zdGFibGVfb25IZWFkID0gKGhlYWQsIGlzU3RyZWFtaW5nKT0+e1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhoZWFkLmhlYWRlcnMgPz8ge30pKXtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi8gaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmVzSGVhZGVycy5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHYgb2YgdmFsdWUpe1xuICAgICAgICAgICAgICAgIHJlc0hlYWRlcnMuYXBwZW5kKGtleSwgdik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3RhdHVzID0gaGVhZC5zdGF0dXM7XG4gICAgICAgIGlmIChpc1N0cmVhbWluZykge1xuICAgICAgICAgICAgcmVzSGVhZGVycy5zZXQoJ1RyYW5zZmVyLUVuY29kaW5nJywgJ2NodW5rZWQnKTtcbiAgICAgICAgICAgIHJlc0hlYWRlcnMuYXBwZW5kKCdWYXJ5JywgJ3RycGMtYmF0Y2gtbW9kZScpO1xuICAgICAgICAgICAgY29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgICAgICAgICAgICBzdGFydCAoYykge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyID0gYztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKHN0cmVhbSwge1xuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNIZWFkZXJzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICAgICAgZm9ybWF0dGVyID0gZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIoKTtcbiAgICAgICAgICAgIGlzU3RyZWFtID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgdW5zdGFibGVfb25DaHVuayA9IChbaW5kZXgsIHN0cmluZ10pPT57XG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIC8vIGZ1bGwgcmVzcG9uc2UsIG5vIHN0cmVhbWluZ1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2Uoc3RyaW5nIHx8IG51bGwsIHtcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzSGVhZGVyc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShmb3JtYXR0ZXIoaW5kZXgsIHN0cmluZykpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmVzb2x2ZUhUVFBSZXNwb25zZSh7XG4gICAgICAgIHJlcSxcbiAgICAgICAgY3JlYXRlQ29udGV4dCxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgcm91dGVyOiBvcHRzLnJvdXRlcixcbiAgICAgICAgYmF0Y2hpbmc6IG9wdHMuYmF0Y2hpbmcsXG4gICAgICAgIHJlc3BvbnNlTWV0YTogb3B0cy5yZXNwb25zZU1ldGEsXG4gICAgICAgIG9uRXJyb3IgKG8pIHtcbiAgICAgICAgICAgIG9wdHM/Lm9uRXJyb3I/Lih7XG4gICAgICAgICAgICAgICAgLi4ubyxcbiAgICAgICAgICAgICAgICByZXE6IG9wdHMucmVxXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgdW5zdGFibGVfb25IZWFkLFxuICAgICAgICB1bnN0YWJsZV9vbkNodW5rXG4gICAgfSkudGhlbigoKT0+e1xuICAgICAgICBpZiAoaXNTdHJlYW0pIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShmb3JtYXR0ZXIuZW5kKCkpKTtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH0pLmNhdGNoKCgpPT57XG4gICAgICAgIGlmIChpc1N0cmVhbSkge1xuICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHByb21pc2U7XG59XG5cbmV4cG9ydCB7IGZldGNoUmVxdWVzdEhhbmRsZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/adapters/fetch/index.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs":
/*!******************************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getBatchStreamFormatter)\n/* harmony export */ });\n/**\n * Format a batch response as a line-delimited JSON stream\n * that the `unstable_httpBatchStreamLink` can parse:\n *\n * @example\n * ```ts\n * const formatter = getBatchStreamFormatter();\n * res.send(formatter(1, 'response #2'));\n * res.send(formatter(0, 'response #1'));\n * res.send(formatter.end());\n * ```\n *\n * Expected format:\n * ```json\n * {\"1\":\"response #2\"\n * ,\"0\":\"response #1\"\n * }\n * ```\n */ function getBatchStreamFormatter() {\n    let first = true;\n    function format(index, string) {\n        const prefix = first ? '{' : ',';\n        first = false;\n        return `${prefix}\"${index}\":${string}\\n`;\n    }\n    format.end = ()=>'}';\n    return format;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2JhdGNoU3RyZWFtRm9ybWF0dGVyLWZjMWZmYjI2Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxrQkFBa0IsT0FBTyxHQUFHLE1BQU0sSUFBSSxPQUFPO0FBQzdDO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGJvaWxlcnBsYXRlL25leHRqcy8uLi8uLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYmF0Y2hTdHJlYW1Gb3JtYXR0ZXItZmMxZmZiMjYubWpzP2Q2YzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGb3JtYXQgYSBiYXRjaCByZXNwb25zZSBhcyBhIGxpbmUtZGVsaW1pdGVkIEpTT04gc3RyZWFtXG4gKiB0aGF0IHRoZSBgdW5zdGFibGVfaHR0cEJhdGNoU3RyZWFtTGlua2AgY2FuIHBhcnNlOlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgZm9ybWF0dGVyID0gZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIoKTtcbiAqIHJlcy5zZW5kKGZvcm1hdHRlcigxLCAncmVzcG9uc2UgIzInKSk7XG4gKiByZXMuc2VuZChmb3JtYXR0ZXIoMCwgJ3Jlc3BvbnNlICMxJykpO1xuICogcmVzLnNlbmQoZm9ybWF0dGVyLmVuZCgpKTtcbiAqIGBgYFxuICpcbiAqIEV4cGVjdGVkIGZvcm1hdDpcbiAqIGBgYGpzb25cbiAqIHtcIjFcIjpcInJlc3BvbnNlICMyXCJcbiAqICxcIjBcIjpcInJlc3BvbnNlICMxXCJcbiAqIH1cbiAqIGBgYFxuICovIGZ1bmN0aW9uIGdldEJhdGNoU3RyZWFtRm9ybWF0dGVyKCkge1xuICAgIGxldCBmaXJzdCA9IHRydWU7XG4gICAgZnVuY3Rpb24gZm9ybWF0KGluZGV4LCBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgcHJlZml4ID0gZmlyc3QgPyAneycgOiAnLCc7XG4gICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBgJHtwcmVmaXh9XCIke2luZGV4fVwiOiR7c3RyaW5nfVxcbmA7XG4gICAgfVxuICAgIGZvcm1hdC5lbmQgPSAoKT0+J30nO1xuICAgIHJldHVybiBmb3JtYXQ7XG59XG5cbmV4cG9ydCB7IGdldEJhdGNoU3RyZWFtRm9ybWF0dGVyIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/codes-c924c3db.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   a: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   i: () => (/* binding */ invert)\n/* harmony export */ });\n/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvZGVzLWM5MjRjM2RiLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYm9pbGVycGxhdGUvbmV4dGpzLy4uLy4uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9jb2Rlcy1jOTI0YzNkYi5tanM/NWQxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGludmVydChvYmopIHtcbiAgICBjb25zdCBuZXdPYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvcihjb25zdCBrZXkgaW4gb2JqKXtcbiAgICAgICAgY29uc3QgdiA9IG9ialtrZXldO1xuICAgICAgICBuZXdPYmpbdl0gPSBrZXk7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5cbi8vIHJlZmVyZW5jZTogaHR0cHM6Ly93d3cuanNvbnJwYy5vcmcvc3BlY2lmaWNhdGlvblxuLyoqXG4gKiBKU09OLVJQQyAyLjAgRXJyb3IgY29kZXNcbiAqXG4gKiBgLTMyMDAwYCB0byBgLTMyMDk5YCBhcmUgcmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy5cbiAqIEZvciB0UlBDIHdlJ3JlIGNvcHlpbmcgdGhlIGxhc3QgZGlnaXRzIG9mIEhUVFAgNFhYIGVycm9ycy5cbiAqLyBjb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSA9IHtcbiAgICAvKipcbiAgICogSW52YWxpZCBKU09OIHdhcyByZWNlaXZlZCBieSB0aGUgc2VydmVyLlxuICAgKiBBbiBlcnJvciBvY2N1cnJlZCBvbiB0aGUgc2VydmVyIHdoaWxlIHBhcnNpbmcgdGhlIEpTT04gdGV4dC5cbiAgICovIFBBUlNFX0VSUk9SOiAtMzI3MDAsXG4gICAgLyoqXG4gICAqIFRoZSBKU09OIHNlbnQgaXMgbm90IGEgdmFsaWQgUmVxdWVzdCBvYmplY3QuXG4gICAqLyBCQURfUkVRVUVTVDogLTMyNjAwLFxuICAgIC8vIEludGVybmFsIEpTT04tUlBDIGVycm9yXG4gICAgSU5URVJOQUxfU0VSVkVSX0VSUk9SOiAtMzI2MDMsXG4gICAgTk9UX0lNUExFTUVOVEVEOiAtMzI2MDMsXG4gICAgLy8gSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3JzXG4gICAgVU5BVVRIT1JJWkVEOiAtMzIwMDEsXG4gICAgRk9SQklEREVOOiAtMzIwMDMsXG4gICAgTk9UX0ZPVU5EOiAtMzIwMDQsXG4gICAgTUVUSE9EX05PVF9TVVBQT1JURUQ6IC0zMjAwNSxcbiAgICBUSU1FT1VUOiAtMzIwMDgsXG4gICAgQ09ORkxJQ1Q6IC0zMjAwOSxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEOiAtMzIwMTIsXG4gICAgUEFZTE9BRF9UT09fTEFSR0U6IC0zMjAxMyxcbiAgICBVTlBST0NFU1NBQkxFX0NPTlRFTlQ6IC0zMjAyMixcbiAgICBUT09fTUFOWV9SRVFVRVNUUzogLTMyMDI5LFxuICAgIENMSUVOVF9DTE9TRURfUkVRVUVTVDogLTMyMDk5XG59O1xuY29uc3QgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSBpbnZlcnQoVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkpO1xuXG5leHBvcnQgeyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSBhcyBULCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiBhcyBhLCBpbnZlcnQgYXMgaSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ defaultTransformer),\n/* harmony export */   b: () => (/* binding */ createCallerFactory),\n/* harmony export */   c: () => (/* binding */ createRouterFactory),\n/* harmony export */   d: () => (/* binding */ defaultFormatter),\n/* harmony export */   e: () => (/* binding */ callProcedure),\n/* harmony export */   g: () => (/* binding */ getDataTransformer),\n/* harmony export */   i: () => (/* binding */ isServerDefault),\n/* harmony export */   p: () => (/* binding */ procedureTypes)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n\n/**\n * @public\n */ /**\n * @internal\n */ function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\n/**\n * @internal\n */ const defaultTransformer = {\n    _default: true,\n    input: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    },\n    output: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    }\n};\n\nconst defaultFormatter = ({ shape  })=>{\n    return shape;\n};\n\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */ function omitPrototype(obj) {\n    return Object.assign(Object.create(null), obj);\n}\n\nconst procedureTypes = [\n    'query',\n    'mutation',\n    'subscription'\n];\n\nfunction isRouter(procedureOrRouter) {\n    return 'router' in procedureOrRouter._def;\n}\nconst emptyRouter = {\n    _ctx: null,\n    _errorShape: null,\n    _meta: null,\n    queries: {},\n    mutations: {},\n    subscriptions: {},\n    errorFormatter: defaultFormatter,\n    transformer: defaultTransformer\n};\n/**\n * Reserved words that can't be used as router or procedure names\n */ const reservedWords = [\n    /**\n   * Then is a reserved word because otherwise we can't return a promise that returns a Proxy\n   * since JS will think that `.then` is something that exists\n   */ 'then'\n];\n/**\n * @internal\n */ function createRouterFactory(config) {\n    return function createRouterInner(procedures) {\n        const reservedWordsUsed = new Set(Object.keys(procedures).filter((v)=>reservedWords.includes(v)));\n        if (reservedWordsUsed.size > 0) {\n            throw new Error('Reserved words used in `router({})` call: ' + Array.from(reservedWordsUsed).join(', '));\n        }\n        const routerProcedures = omitPrototype({});\n        function recursiveGetPaths(procedures, path = '') {\n            for (const [key, procedureOrRouter] of Object.entries(procedures ?? {})){\n                const newPath = `${path}${key}`;\n                if (isRouter(procedureOrRouter)) {\n                    recursiveGetPaths(procedureOrRouter._def.procedures, `${newPath}.`);\n                    continue;\n                }\n                if (routerProcedures[newPath]) {\n                    throw new Error(`Duplicate key: ${newPath}`);\n                }\n                routerProcedures[newPath] = procedureOrRouter;\n            }\n        }\n        recursiveGetPaths(procedures);\n        const _def = {\n            _config: config,\n            router: true,\n            procedures: routerProcedures,\n            ...emptyRouter,\n            record: procedures,\n            queries: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.query).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            mutations: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.mutation).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            subscriptions: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.subscription).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {})\n        };\n        const router = {\n            ...procedures,\n            _def,\n            createCaller (ctx) {\n                return createCallerFactory()(router)(ctx);\n            },\n            getErrorShape (opts) {\n                const { path , error  } = opts;\n                const { code  } = opts.error;\n                const shape = {\n                    message: error.message,\n                    code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__.T[code],\n                    data: {\n                        code,\n                        httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(error)\n                    }\n                };\n                if (config.isDev && typeof opts.error.stack === 'string') {\n                    shape.data.stack = opts.error.stack;\n                }\n                if (typeof path === 'string') {\n                    shape.data.path = path;\n                }\n                return this._def._config.errorFormatter({\n                    ...opts,\n                    shape\n                });\n            }\n        };\n        return router;\n    };\n}\n/**\n * @internal\n */ function callProcedure(opts) {\n    const { type , path  } = opts;\n    if (!(path in opts.procedures) || !opts.procedures[path]?._def[type]) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'NOT_FOUND',\n            message: `No \"${type}\"-procedure on path \"${path}\"`\n        });\n    }\n    const procedure = opts.procedures[path];\n    return procedure(opts);\n}\nfunction createCallerFactory() {\n    return function createCallerInner(router) {\n        const def = router._def;\n        return function createCaller(ctx) {\n            const proxy = (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(({ path , args  })=>{\n                // interop mode\n                if (path.length === 1 && procedureTypes.includes(path[0])) {\n                    return callProcedure({\n                        procedures: def.procedures,\n                        path: args[0],\n                        rawInput: args[1],\n                        ctx,\n                        type: path[0]\n                    });\n                }\n                const fullPath = path.join('.');\n                const procedure = def.procedures[fullPath];\n                let type = 'query';\n                if (procedure._def.mutation) {\n                    type = 'mutation';\n                } else if (procedure._def.subscription) {\n                    type = 'subscription';\n                }\n                return procedure({\n                    path: fullPath,\n                    rawInput: args[0],\n                    ctx,\n                    type\n                });\n            });\n            return proxy;\n        };\n    };\n}\n\n/**\n * The default check to see if we're in a server\n */ const isServerDefault = typeof window === 'undefined' || 'Deno' in window || globalThis.process?.env?.NODE_ENV === 'test' || !!globalThis.process?.env?.JEST_WORKER_ID || !!globalThis.process?.env?.VITEST_WORKER_ID;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/contentType-9fd995d3.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/contentType-9fd995d3.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getJsonContentTypeInputs)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n\n\nfunction getRawProcedureInputOrThrow(opts) {\n    const { req  } = opts;\n    try {\n        if (req.method === 'GET') {\n            if (!req.query.has('input')) {\n                return undefined;\n            }\n            const raw = req.query.get('input');\n            return JSON.parse(raw);\n        }\n        if (!opts.preprocessedBody && typeof req.body === 'string') {\n            // A mutation with no inputs will have req.body === ''\n            return req.body.length === 0 ? undefined : JSON.parse(req.body);\n        }\n        return req.body;\n    } catch (cause) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'PARSE_ERROR',\n            cause\n        });\n    }\n}\nconst deserializeInputValue = (rawValue, transformer)=>{\n    return typeof rawValue !== 'undefined' ? transformer.input.deserialize(rawValue) : rawValue;\n};\nconst getJsonContentTypeInputs = (opts)=>{\n    const rawInput = getRawProcedureInputOrThrow(opts);\n    const transformer = opts.router._def._config.transformer;\n    if (!opts.isBatchCall) {\n        return {\n            0: deserializeInputValue(rawInput, transformer)\n        };\n    }\n    /* istanbul ignore if  */ if (rawInput == null || typeof rawInput !== 'object' || Array.isArray(rawInput)) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'BAD_REQUEST',\n            message: '\"input\" needs to be an object when doing a batch call'\n        });\n    }\n    const input = {};\n    for(const key in rawInput){\n        const k = key;\n        const rawValue = rawInput[k];\n        const value = deserializeInputValue(rawValue, transformer);\n        input[k] = value;\n    }\n    return input;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvbnRlbnRUeXBlLTlmZDk5NWQzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRDs7QUFFMUQ7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0JBQWtCLHNEQUFTO0FBQzNCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzREFBUztBQUMzQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bib2lsZXJwbGF0ZS9uZXh0anMvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvbnRlbnRUeXBlLTlmZDk5NWQzLm1qcz8zMTc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFQgYXMgVFJQQ0Vycm9yIH0gZnJvbSAnLi9UUlBDRXJyb3ItOThkNDQ3NTgubWpzJztcblxuZnVuY3Rpb24gZ2V0UmF3UHJvY2VkdXJlSW5wdXRPclRocm93KG9wdHMpIHtcbiAgICBjb25zdCB7IHJlcSAgfSA9IG9wdHM7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XG4gICAgICAgICAgICBpZiAoIXJlcS5xdWVyeS5oYXMoJ2lucHV0JykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmF3ID0gcmVxLnF1ZXJ5LmdldCgnaW5wdXQnKTtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHJhdyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFvcHRzLnByZXByb2Nlc3NlZEJvZHkgJiYgdHlwZW9mIHJlcS5ib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gQSBtdXRhdGlvbiB3aXRoIG5vIGlucHV0cyB3aWxsIGhhdmUgcmVxLmJvZHkgPT09ICcnXG4gICAgICAgICAgICByZXR1cm4gcmVxLmJvZHkubGVuZ3RoID09PSAwID8gdW5kZWZpbmVkIDogSlNPTi5wYXJzZShyZXEuYm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcS5ib2R5O1xuICAgIH0gY2F0Y2ggKGNhdXNlKSB7XG4gICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgY29kZTogJ1BBUlNFX0VSUk9SJyxcbiAgICAgICAgICAgIGNhdXNlXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmNvbnN0IGRlc2VyaWFsaXplSW5wdXRWYWx1ZSA9IChyYXdWYWx1ZSwgdHJhbnNmb3JtZXIpPT57XG4gICAgcmV0dXJuIHR5cGVvZiByYXdWYWx1ZSAhPT0gJ3VuZGVmaW5lZCcgPyB0cmFuc2Zvcm1lci5pbnB1dC5kZXNlcmlhbGl6ZShyYXdWYWx1ZSkgOiByYXdWYWx1ZTtcbn07XG5jb25zdCBnZXRKc29uQ29udGVudFR5cGVJbnB1dHMgPSAob3B0cyk9PntcbiAgICBjb25zdCByYXdJbnB1dCA9IGdldFJhd1Byb2NlZHVyZUlucHV0T3JUaHJvdyhvcHRzKTtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IG9wdHMucm91dGVyLl9kZWYuX2NvbmZpZy50cmFuc2Zvcm1lcjtcbiAgICBpZiAoIW9wdHMuaXNCYXRjaENhbGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIDA6IGRlc2VyaWFsaXplSW5wdXRWYWx1ZShyYXdJbnB1dCwgdHJhbnNmb3JtZXIpXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi8gaWYgKHJhd0lucHV0ID09IG51bGwgfHwgdHlwZW9mIHJhd0lucHV0ICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHJhd0lucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgIGNvZGU6ICdCQURfUkVRVUVTVCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnXCJpbnB1dFwiIG5lZWRzIHRvIGJlIGFuIG9iamVjdCB3aGVuIGRvaW5nIGEgYmF0Y2ggY2FsbCdcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0ID0ge307XG4gICAgZm9yKGNvbnN0IGtleSBpbiByYXdJbnB1dCl7XG4gICAgICAgIGNvbnN0IGsgPSBrZXk7XG4gICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gcmF3SW5wdXRba107XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVJbnB1dFZhbHVlKHJhd1ZhbHVlLCB0cmFuc2Zvcm1lcik7XG4gICAgICAgIGlucHV0W2tdID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dDtcbn07XG5cbmV4cG9ydCB7IGdldEpzb25Db250ZW50VHlwZUlucHV0cyBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCauseFromUnknown)\n/* harmony export */ });\n/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bib2lsZXJwbGF0ZS9uZXh0anMvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzPzVjZTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgIC8vIGNoZWNrIHRoYXQgdmFsdWUgaXMgb2JqZWN0XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG59XG5cbmNsYXNzIFVua25vd25DYXVzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZnVuY3Rpb24gZ2V0Q2F1c2VGcm9tVW5rbm93bihjYXVzZSkge1xuICAgIGlmIChjYXVzZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiBjYXVzZTtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiBjYXVzZTtcbiAgICBpZiAodHlwZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fCBjYXVzZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBQcmltaXRpdmUgdHlwZXMganVzdCBnZXQgd3JhcHBlZCBpbiBhbiBlcnJvclxuICAgIGlmICh0eXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFN0cmluZyhjYXVzZSkpO1xuICAgIH1cbiAgICAvLyBJZiBpdCdzIGFuIG9iamVjdCwgd2UnbGwgY3JlYXRlIGEgc3ludGhldGljIGVycm9yXG4gICAgaWYgKGlzT2JqZWN0KGNhdXNlKSkge1xuICAgICAgICBjb25zdCBlcnIgPSBuZXcgVW5rbm93bkNhdXNlRXJyb3IoKTtcbiAgICAgICAgZm9yKGNvbnN0IGtleSBpbiBjYXVzZSl7XG4gICAgICAgICAgICBlcnJba2V5XSA9IGNhdXNlW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgZ2V0Q2F1c2VGcm9tVW5rbm93biBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/index-f91d720c.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   a: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   b: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   c: () => (/* binding */ createFlatProxy),\n/* harmony export */   g: () => (/* binding */ getHTTPStatusCodeFromError)\n/* harmony export */ });\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\nconst TRPC_ERROR_CODES_BY_NUMBER = (0,_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.i)(_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.T);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2luZGV4LWY5MWQ3MjBjLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUY7O0FBRWpGLG1DQUFtQyxzREFBTSxDQUFDLGtEQUF1QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVxSiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bib2lsZXJwbGF0ZS9uZXh0anMvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2luZGV4LWY5MWQ3MjBjLm1qcz9hODBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGkgYXMgaW52ZXJ0LCBUIGFzIFRSUENfRVJST1JfQ09ERVNfQllfS0VZIH0gZnJvbSAnLi9jb2Rlcy1jOTI0YzNkYi5tanMnO1xuXG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IGludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5jb25zdCBKU09OUlBDMl9UT19IVFRQX0NPREUgPSB7XG4gICAgUEFSU0VfRVJST1I6IDQwMCxcbiAgICBCQURfUkVRVUVTVDogNDAwLFxuICAgIFVOQVVUSE9SSVpFRDogNDAxLFxuICAgIE5PVF9GT1VORDogNDA0LFxuICAgIEZPUkJJRERFTjogNDAzLFxuICAgIE1FVEhPRF9OT1RfU1VQUE9SVEVEOiA0MDUsXG4gICAgVElNRU9VVDogNDA4LFxuICAgIENPTkZMSUNUOiA0MDksXG4gICAgUFJFQ09ORElUSU9OX0ZBSUxFRDogNDEyLFxuICAgIFBBWUxPQURfVE9PX0xBUkdFOiA0MTMsXG4gICAgVU5QUk9DRVNTQUJMRV9DT05URU5UOiA0MjIsXG4gICAgVE9PX01BTllfUkVRVUVTVFM6IDQyOSxcbiAgICBDTElFTlRfQ0xPU0VEX1JFUVVFU1Q6IDQ5OSxcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IDUwMCxcbiAgICBOT1RfSU1QTEVNRU5URUQ6IDUwMVxufTtcbmZ1bmN0aW9uIGdldFN0YXR1c0NvZGVGcm9tS2V5KGNvZGUpIHtcbiAgICByZXR1cm4gSlNPTlJQQzJfVE9fSFRUUF9DT0RFW2NvZGVdID8/IDUwMDtcbn1cbmZ1bmN0aW9uIGdldEhUVFBTdGF0dXNDb2RlKGpzb24pIHtcbiAgICBjb25zdCBhcnIgPSBBcnJheS5pc0FycmF5KGpzb24pID8ganNvbiA6IFtcbiAgICAgICAganNvblxuICAgIF07XG4gICAgY29uc3QgaHR0cFN0YXR1c2VzID0gbmV3IFNldChhcnIubWFwKChyZXMpPT57XG4gICAgICAgIGlmICgnZXJyb3InIGluIHJlcykge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5lcnJvci5kYXRhO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhLmh0dHBTdGF0dXMgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuaHR0cFN0YXR1cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvZGUgPSBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUltyZXMuZXJyb3IuY29kZV07XG4gICAgICAgICAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoY29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDIwMDtcbiAgICB9KSk7XG4gICAgaWYgKGh0dHBTdGF0dXNlcy5zaXplICE9PSAxKSB7XG4gICAgICAgIHJldHVybiAyMDc7XG4gICAgfVxuICAgIGNvbnN0IGh0dHBTdGF0dXMgPSBodHRwU3RhdHVzZXMudmFsdWVzKCkubmV4dCgpLnZhbHVlO1xuICAgIHJldHVybiBodHRwU3RhdHVzO1xufVxuZnVuY3Rpb24gZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoZXJyb3IuY29kZSk7XG59XG5cbmNvbnN0IG5vb3AgPSAoKT0+e1xuLy8gbm9vcFxufTtcbmZ1bmN0aW9uIGNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIHBhdGgpIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShub29wLCB7XG4gICAgICAgIGdldCAoX29iaiwga2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3N0cmluZycgfHwga2V5ID09PSAndGhlbicpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgZm9yIGlmIHRoZSBwcm94eSBpcyBhY2NpZGVudGFsbHkgdHJlYXRlZFxuICAgICAgICAgICAgICAgIC8vIGxpa2UgYSBQcm9taXNlTGlrZSAobGlrZSBpbiBgUHJvbWlzZS5yZXNvbHZlKHByb3h5KWApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbm5lclByb3h5KGNhbGxiYWNrLCBbXG4gICAgICAgICAgICAgICAgLi4ucGF0aCxcbiAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9LFxuICAgICAgICBhcHBseSAoXzEsIF8yLCBhcmdzKSB7XG4gICAgICAgICAgICBjb25zdCBpc0FwcGx5ID0gcGF0aFtwYXRoLmxlbmd0aCAtIDFdID09PSAnYXBwbHknO1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICBhcmdzOiBpc0FwcGx5ID8gYXJncy5sZW5ndGggPj0gMiA/IGFyZ3NbMV0gOiBbXSA6IGFyZ3MsXG4gICAgICAgICAgICAgICAgcGF0aDogaXNBcHBseSA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcHJveHk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBwcm94eSB0aGF0IGNhbGxzIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBwYXRoIGFuZCBhcmd1bWVudHNcbiAqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBjcmVhdGVSZWN1cnNpdmVQcm94eSA9IChjYWxsYmFjayk9PmNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIFtdKTtcbi8qKlxuICogVXNlZCBpbiBwbGFjZSBvZiBgbmV3IFByb3h5YCB3aGVyZSBlYWNoIGhhbmRsZXIgd2lsbCBtYXAgMSBsZXZlbCBkZWVwIHRvIGFub3RoZXIgdmFsdWUuXG4gKlxuICogQGludGVybmFsXG4gKi8gY29uc3QgY3JlYXRlRmxhdFByb3h5ID0gKGNhbGxiYWNrKT0+e1xuICAgIHJldHVybiBuZXcgUHJveHkobm9vcCwge1xuICAgICAgICBnZXQgKF9vYmosIG5hbWUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycgfHwgbmFtZSA9PT0gJ3RoZW4nKSB7XG4gICAgICAgICAgICAgICAgLy8gc3BlY2lhbCBjYXNlIGZvciBpZiB0aGUgcHJveHkgaXMgYWNjaWRlbnRhbGx5IHRyZWF0ZWRcbiAgICAgICAgICAgICAgICAvLyBsaWtlIGEgUHJvbWlzZUxpa2UgKGxpa2UgaW4gYFByb21pc2UucmVzb2x2ZShwcm94eSlgKVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbmV4cG9ydCB7IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSIGFzIFQsIGNyZWF0ZVJlY3Vyc2l2ZVByb3h5IGFzIGEsIGdldEhUVFBTdGF0dXNDb2RlIGFzIGIsIGNyZWF0ZUZsYXRQcm94eSBhcyBjLCBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/index.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCError: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T),\n/* harmony export */   callProcedure: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   createCallerFactory: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   createInputMiddleware: () => (/* binding */ createInputMiddleware),\n/* harmony export */   createOutputMiddleware: () => (/* binding */ createOutputMiddleware),\n/* harmony export */   defaultTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   experimental_standaloneMiddleware: () => (/* binding */ experimental_standaloneMiddleware),\n/* harmony export */   getDataTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   getTRPCErrorFromUnknown: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   initTRPC: () => (/* binding */ initTRPC),\n/* harmony export */   procedureTypes: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   router: () => (/* binding */ router)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\n\n\n\n\n\n\n/**\n * @deprecated\n */ const middlewareMarker$1 = 'middlewareMarker';\n\nfunction getParseFn$1(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ProcedureParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ProcedureParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ProcedureParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @internal\n * @deprecated\n */ class Procedure {\n    _def() {\n        return {\n            middlewares: this.middlewares,\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        };\n    }\n    async parseInput(rawInput) {\n        try {\n            return await this.parseInputFn(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n    }\n    async parseOutput(rawOutput) {\n        try {\n            return await this.parseOutputFn(rawOutput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                cause,\n                message: 'Output validation failed'\n            });\n        }\n    }\n    /**\n   * Trigger middlewares in order, parse raw input, call resolver & parse raw output\n   * @internal\n   */ async call(opts) {\n        // wrap the actual resolver and treat as the last \"middleware\"\n        const middlewaresWithResolver = this.middlewares.concat([\n            async ({ ctx  })=>{\n                const input = await this.parseInput(opts.rawInput);\n                const rawOutput = await this.resolver({\n                    ...opts,\n                    ctx,\n                    input\n                });\n                const data = await this.parseOutput(rawOutput);\n                return {\n                    marker: middlewareMarker$1,\n                    ok: true,\n                    data,\n                    ctx\n                };\n            }\n        ]);\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const result = await middlewaresWithResolver[callOpts.index]({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: opts.rawInput,\n                    meta: this.meta,\n                    next: async (nextOpts)=>{\n                        return await callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts ? nextOpts.ctx : callOpts.ctx\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ctx: callOpts.ctx,\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker$1\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    }\n    /**\n   * Create new procedure with passed middlewares\n   * @param middlewares\n   */ inheritMiddlewares(middlewares) {\n        const Constructor = this.constructor;\n        const instance = new Constructor({\n            middlewares: [\n                ...middlewares,\n                ...this.middlewares\n            ],\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        });\n        return instance;\n    }\n    constructor(opts){\n        this.middlewares = opts.middlewares;\n        this.resolver = opts.resolver;\n        this.inputParser = opts.inputParser;\n        this.parseInputFn = getParseFn$1(this.inputParser);\n        this.outputParser = opts.outputParser;\n        this.parseOutputFn = getParseFn$1(this.outputParser);\n        this.meta = opts.meta;\n    }\n}\nfunction createProcedure(opts) {\n    const inputParser = 'input' in opts ? opts.input : (input)=>{\n        if (input != null) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                message: 'No input expected'\n            });\n        }\n        return undefined;\n    };\n    const outputParser = 'output' in opts && opts.output ? opts.output : (output)=>output;\n    return new Procedure({\n        inputParser: inputParser,\n        resolver: opts.resolve,\n        middlewares: [],\n        outputParser: outputParser,\n        meta: opts.meta\n    });\n}\n\nfunction getParseFn(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ParserZodEsque\n        // ParserValibotEsque (<= v0.12.X)\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    if (typeof parser.assert === 'function') {\n        // ParserScaleEsque\n        return (value)=>{\n            parser.assert(value);\n            return value;\n        };\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @deprecated only for backwards compat\n * @internal\n */ function getParseFnOrPassThrough(procedureParser) {\n    if (!procedureParser) {\n        return (v)=>v;\n    }\n    return getParseFn(procedureParser);\n}\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n */ function mergeWithoutOverrides(obj1, ...objs) {\n    const newObj = Object.assign(Object.create(null), obj1);\n    for (const overrides of objs){\n        for(const key in overrides){\n            if (key in newObj && newObj[key] !== overrides[key]) {\n                throw new Error(`Duplicate key ${key}`);\n            }\n            newObj[key] = overrides[key];\n        }\n    }\n    return newObj;\n}\n\n/**\n * @internal\n */ function createMiddlewareFactory() {\n    function createMiddlewareInner(middlewares) {\n        return {\n            _middlewares: middlewares,\n            unstable_pipe (middlewareBuilderOrFn) {\n                const pipedMiddleware = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                    middlewareBuilderOrFn\n                ];\n                return createMiddlewareInner([\n                    ...middlewares,\n                    ...pipedMiddleware\n                ]);\n            }\n        };\n    }\n    function createMiddleware(fn) {\n        return createMiddlewareInner([\n            fn\n        ]);\n    }\n    return createMiddleware;\n}\nconst experimental_standaloneMiddleware = ()=>({\n        create: createMiddlewareFactory()\n    });\nfunction isPlainObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n/**\n * @internal\n * Please note, `trpc-openapi` uses this function.\n */ function createInputMiddleware(parse) {\n    const inputMiddleware = async ({ next , rawInput , input ,  })=>{\n        let parsedInput;\n        try {\n            parsedInput = await parse(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n        // Multiple input parsers\n        const combinedInput = isPlainObject(input) && isPlainObject(parsedInput) ? {\n            ...input,\n            ...parsedInput\n        } : parsedInput;\n        // TODO fix this typing?\n        return next({\n            input: combinedInput\n        });\n    };\n    inputMiddleware._type = 'input';\n    return inputMiddleware;\n}\n/**\n * @internal\n */ function createOutputMiddleware(parse) {\n    const outputMiddleware = async ({ next  })=>{\n        const result = await next();\n        if (!result.ok) {\n            // pass through failures without validating\n            return result;\n        }\n        try {\n            const data = await parse(result.data);\n            return {\n                ...result,\n                data\n            };\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Output validation failed',\n                code: 'INTERNAL_SERVER_ERROR',\n                cause\n            });\n        }\n    };\n    outputMiddleware._type = 'output';\n    return outputMiddleware;\n}\n\n/**\n * @internal\n */ const middlewareMarker = 'middlewareMarker';\n\nfunction createNewBuilder(def1, def2) {\n    const { middlewares =[] , inputs , meta , ...rest } = def2;\n    // TODO: maybe have a fn here to warn about calls\n    return createBuilder({\n        ...mergeWithoutOverrides(def1, rest),\n        inputs: [\n            ...def1.inputs,\n            ...inputs ?? []\n        ],\n        middlewares: [\n            ...def1.middlewares,\n            ...middlewares\n        ],\n        meta: def1.meta && meta ? {\n            ...def1.meta,\n            ...meta\n        } : meta ?? def1.meta\n    });\n}\nfunction createBuilder(initDef = {}) {\n    const _def = {\n        inputs: [],\n        middlewares: [],\n        ...initDef\n    };\n    return {\n        _def,\n        input (input) {\n            const parser = getParseFn(input);\n            return createNewBuilder(_def, {\n                inputs: [\n                    input\n                ],\n                middlewares: [\n                    createInputMiddleware(parser)\n                ]\n            });\n        },\n        output (output) {\n            const parseOutput = getParseFn(output);\n            return createNewBuilder(_def, {\n                output,\n                middlewares: [\n                    createOutputMiddleware(parseOutput)\n                ]\n            });\n        },\n        meta (meta) {\n            return createNewBuilder(_def, {\n                meta: meta\n            });\n        },\n        /**\n     * @deprecated\n     * This functionality is deprecated and will be removed in the next major version.\n     */ unstable_concat (builder) {\n            return createNewBuilder(_def, builder._def);\n        },\n        use (middlewareBuilderOrFn) {\n            // Distinguish between a middleware builder and a middleware function\n            const middlewares = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                middlewareBuilderOrFn\n            ];\n            return createNewBuilder(_def, {\n                middlewares: middlewares\n            });\n        },\n        query (resolver) {\n            return createResolver({\n                ..._def,\n                query: true\n            }, resolver);\n        },\n        mutation (resolver) {\n            return createResolver({\n                ..._def,\n                mutation: true\n            }, resolver);\n        },\n        subscription (resolver) {\n            return createResolver({\n                ..._def,\n                subscription: true\n            }, resolver);\n        }\n    };\n}\nfunction createResolver(_def, resolver) {\n    const finalBuilder = createNewBuilder(_def, {\n        resolver,\n        middlewares: [\n            async function resolveMiddleware(opts) {\n                const data = await resolver(opts);\n                return {\n                    marker: middlewareMarker,\n                    ok: true,\n                    data,\n                    ctx: opts.ctx\n                };\n            }\n        ]\n    });\n    return createProcedureCaller(finalBuilder._def);\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/server/server-side-calls\n`.trim();\nfunction createProcedureCaller(_def) {\n    const procedure = async function resolve(opts) {\n        // is direct server-side call\n        if (!opts || !('rawInput' in opts)) {\n            throw new Error(codeblock);\n        }\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const middleware = _def.middlewares[callOpts.index];\n                const result = await middleware({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: callOpts.rawInput ?? opts.rawInput,\n                    meta: _def.meta,\n                    input: callOpts.input,\n                    next (_nextOpts) {\n                        const nextOpts = _nextOpts;\n                        return callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts && 'ctx' in nextOpts ? {\n                                ...callOpts.ctx,\n                                ...nextOpts.ctx\n                            } : callOpts.ctx,\n                            input: nextOpts && 'input' in nextOpts ? nextOpts.input : callOpts.input,\n                            rawInput: nextOpts && 'rawInput' in nextOpts ? nextOpts.rawInput : callOpts.rawInput\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    };\n    procedure._def = _def;\n    procedure.meta = _def.meta;\n    return procedure;\n}\n\nfunction migrateProcedure(oldProc, type) {\n    const def = oldProc._def();\n    const inputParser = getParseFnOrPassThrough(def.inputParser);\n    const outputParser = getParseFnOrPassThrough(def.outputParser);\n    const inputMiddleware = createInputMiddleware(inputParser);\n    const builder = createBuilder({\n        inputs: [\n            def.inputParser\n        ],\n        middlewares: [\n            ...def.middlewares,\n            inputMiddleware,\n            createOutputMiddleware(outputParser)\n        ],\n        meta: def.meta,\n        output: def.outputParser,\n        mutation: type === 'mutation',\n        query: type === 'query',\n        subscription: type === 'subscription'\n    });\n    const proc = builder[type]((opts)=>def.resolver(opts));\n    return proc;\n}\nfunction migrateRouter(oldRouter) {\n    const errorFormatter = oldRouter._def.errorFormatter;\n    const transformer = oldRouter._def.transformer;\n    const queries = {};\n    const mutations = {};\n    const subscriptions = {};\n    for (const [name, procedure] of Object.entries(oldRouter._def.queries)){\n        queries[name] = migrateProcedure(procedure, 'query');\n    }\n    for (const [name1, procedure1] of Object.entries(oldRouter._def.mutations)){\n        mutations[name1] = migrateProcedure(procedure1, 'mutation');\n    }\n    for (const [name2, procedure2] of Object.entries(oldRouter._def.subscriptions)){\n        subscriptions[name2] = migrateProcedure(procedure2, 'subscription');\n    }\n    const procedures = mergeWithoutOverrides(queries, mutations, subscriptions);\n    const newRouter = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        transformer,\n        errorFormatter,\n        isDev: \"development\" !== 'production'\n    })(procedures);\n    return newRouter;\n}\n\nfunction getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\nconst PROCEDURE_DEFINITION_MAP = {\n    query: 'queries',\n    mutation: 'mutations',\n    subscription: 'subscriptions'\n};\nfunction safeObject(...args) {\n    return Object.assign(Object.create(null), ...args);\n}\n/**\n * @internal The type signature of this class may change without warning.\n * @deprecated\n */ class Router {\n    static prefixProcedures(procedures, prefix) {\n        const eps = safeObject();\n        for (const [key, procedure] of Object.entries(procedures)){\n            eps[prefix + key] = procedure;\n        }\n        return eps;\n    }\n    query(path, procedure) {\n        const router = new Router({\n            queries: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    mutation(path, procedure) {\n        const router = new Router({\n            mutations: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    subscription(path, procedure) {\n        const router = new Router({\n            subscriptions: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    merge(prefixOrRouter, maybeRouter) {\n        let prefix = '';\n        let childRouter;\n        if (typeof prefixOrRouter === 'string' && maybeRouter instanceof Router) {\n            prefix = prefixOrRouter;\n            childRouter = maybeRouter;\n        } else if (prefixOrRouter instanceof Router) {\n            childRouter = prefixOrRouter;\n        } else {\n            throw new Error('Invalid args');\n        }\n        const duplicateQueries = Object.keys(childRouter._def.queries).filter((key)=>!!this._def.queries[prefix + key]);\n        const duplicateMutations = Object.keys(childRouter._def.mutations).filter((key)=>!!this._def.mutations[prefix + key]);\n        const duplicateSubscriptions = Object.keys(childRouter._def.subscriptions).filter((key)=>!!this._def.subscriptions[prefix + key]);\n        const duplicates = [\n            ...duplicateQueries,\n            ...duplicateMutations,\n            ...duplicateSubscriptions\n        ];\n        if (duplicates.length) {\n            throw new Error(`Duplicate endpoint(s): ${duplicates.join(', ')}`);\n        }\n        const mergeProcedures = (defs)=>{\n            const newDefs = safeObject();\n            for (const [key, procedure] of Object.entries(defs)){\n                const newProcedure = procedure.inheritMiddlewares(this._def.middlewares);\n                newDefs[key] = newProcedure;\n            }\n            return Router.prefixProcedures(newDefs, prefix);\n        };\n        return new Router({\n            ...this._def,\n            queries: safeObject(this._def.queries, mergeProcedures(childRouter._def.queries)),\n            mutations: safeObject(this._def.mutations, mergeProcedures(childRouter._def.mutations)),\n            subscriptions: safeObject(this._def.subscriptions, mergeProcedures(childRouter._def.subscriptions))\n        });\n    }\n    /**\n   * Invoke procedure. Only for internal use within library.\n   */ async call(opts) {\n        const { type , path  } = opts;\n        const defTarget = PROCEDURE_DEFINITION_MAP[type];\n        const defs = this._def[defTarget];\n        const procedure = defs[path];\n        if (!procedure) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'NOT_FOUND',\n                message: `No \"${type}\"-procedure on path \"${path}\"`\n            });\n        }\n        return procedure.call(opts);\n    }\n    createCaller(ctx) {\n        return {\n            query: (path, ...args)=>{\n                return this.call({\n                    type: 'query',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            mutation: (path, ...args)=>{\n                return this.call({\n                    type: 'mutation',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            subscription: (path, ...args)=>{\n                return this.call({\n                    type: 'subscription',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            }\n        };\n    }\n    /**\n   * Function to be called before any procedure is invoked\n   * @link https://trpc.io/docs/middlewares\n   */ middleware(middleware) {\n        return new Router({\n            ...this._def,\n            middlewares: [\n                ...this._def.middlewares,\n                middleware\n            ]\n        });\n    }\n    /**\n   * Format errors\n   * @link https://trpc.io/docs/error-formatting\n   */ formatError(errorFormatter) {\n        if (this._def.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            throw new Error('You seem to have double `formatError()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            errorFormatter: errorFormatter\n        });\n    }\n    getErrorShape(opts) {\n        const { path , error  } = opts;\n        const { code  } = opts.error;\n        const shape = {\n            message: error.message,\n            code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__.T[code],\n            data: {\n                code,\n                httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.g)(error)\n            }\n        };\n        if (globalThis.process?.env?.NODE_ENV !== 'production' && typeof opts.error.stack === 'string') {\n            shape.data.stack = opts.error.stack;\n        }\n        if (typeof path === 'string') {\n            shape.data.path = path;\n        }\n        return this._def.errorFormatter({\n            ...opts,\n            shape\n        });\n    }\n    /**\n   * Add data transformer to serialize/deserialize input args + output\n   * @link https://trpc.io/docs/data-transformers\n   */ transformer(_transformer) {\n        const transformer = getDataTransformer(_transformer);\n        if (this._def.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            throw new Error('You seem to have double `transformer()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            transformer\n        });\n    }\n    /**\n   * Flattens the generics of TQueries/TMutations/TSubscriptions.\n   * ⚠️ Experimental - might disappear. ⚠️\n   *\n   * @alpha\n   */ flat() {\n        return this;\n    }\n    /**\n   * Interop mode for v9.x -> v10.x\n   */ interop() {\n        return migrateRouter(this);\n    }\n    constructor(def){\n        this._def = {\n            queries: def?.queries ?? safeObject(),\n            mutations: def?.mutations ?? safeObject(),\n            subscriptions: def?.subscriptions ?? safeObject(),\n            middlewares: def?.middlewares ?? [],\n            errorFormatter: def?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d,\n            transformer: def?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a\n        };\n    }\n}\n/**\n * @deprecated\n */ function router() {\n    return new Router();\n}\n\nfunction mergeRouters(...routerList) {\n    const record = mergeWithoutOverrides({}, ...routerList.map((r)=>r._def.record));\n    const errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter)=>{\n        if (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            if (currentErrorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d && currentErrorFormatter !== nextRouter._def._config.errorFormatter) {\n                throw new Error('You seem to have several error formatters');\n            }\n            return nextRouter._def._config.errorFormatter;\n        }\n        return currentErrorFormatter;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d);\n    const transformer = routerList.reduce((prev, current)=>{\n        if (current._def._config.transformer && current._def._config.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            if (prev !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a && prev !== current._def._config.transformer) {\n                throw new Error('You seem to have several transformers');\n            }\n            return current._def._config.transformer;\n        }\n        return prev;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n    const router = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        errorFormatter,\n        transformer,\n        isDev: routerList.some((r)=>r._def._config.isDev),\n        allowOutsideOfServer: routerList.some((r)=>r._def._config.allowOutsideOfServer),\n        isServer: routerList.some((r)=>r._def._config.isServer),\n        $types: routerList[0]?._def._config.$types\n    })(record);\n    return router;\n}\n\n/**\n * TODO: This can be improved:\n * - We should be able to chain `.meta()`/`.context()` only once\n * - Simplify typings\n * - Doesn't need to be a class but it doesn't really hurt either\n */ class TRPCBuilder {\n    context() {\n        return new TRPCBuilder();\n    }\n    meta() {\n        return new TRPCBuilder();\n    }\n    create(options) {\n        return createTRPCInner()(options);\n    }\n}\n/**\n * Initialize tRPC - done exactly once per backend\n */ const initTRPC = new TRPCBuilder();\nfunction createTRPCInner() {\n    return function initTRPCInner(runtime) {\n        const errorFormatter = runtime?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d;\n        const transformer = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(runtime?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n        const config = {\n            transformer,\n            isDev: runtime?.isDev ?? globalThis.process?.env?.NODE_ENV !== 'production',\n            allowOutsideOfServer: runtime?.allowOutsideOfServer ?? false,\n            errorFormatter,\n            isServer: runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i,\n            /**\n       * @internal\n       */ $types: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.c)((key)=>{\n                throw new Error(`Tried to access \"$types.${key}\" which is not available at runtime`);\n            })\n        };\n        {\n            // Server check\n            const isServer = runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i;\n            if (!isServer && runtime?.allowOutsideOfServer !== true) {\n                throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n            }\n        }\n        return {\n            /**\n       * These are just types, they can't be used\n       * @internal\n       */ _config: config,\n            /**\n       * Builder object for creating procedures\n       * @see https://trpc.io/docs/server/procedures\n       */ procedure: createBuilder({\n                meta: runtime?.defaultMeta\n            }),\n            /**\n       * Create reusable middlewares\n       * @see https://trpc.io/docs/server/middlewares\n       */ middleware: createMiddlewareFactory(),\n            /**\n       * Create a router\n       * @see https://trpc.io/docs/server/routers\n       */ router: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)(config),\n            /**\n       * Merge Routers\n       * @see https://trpc.io/docs/server/merging-routers\n       */ mergeRouters,\n            /**\n       * Create a server-side caller for a router\n       * @see https://trpc.io/docs/server/server-side-calls\n       */ createCallerFactory: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b)()\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   r: () => (/* binding */ resolveHTTPResponse)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformTRPCResponse-1153b421.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contentType-9fd995d3.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n\n\n\n\n\n\nconst HTTP_METHOD_PROCEDURE_TYPE_MAP = {\n    GET: 'query',\n    POST: 'mutation'\n};\nconst fallbackContentTypeHandler = {\n    getInputs: _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__.g\n};\nfunction initResponse(initOpts) {\n    const { ctx , paths , type , responseMeta , untransformedJSON , errors =[] ,  } = initOpts;\n    let status = untransformedJSON ? (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__.b)(untransformedJSON) : 200;\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n    const eagerGeneration = !untransformedJSON;\n    const data = eagerGeneration ? [] : Array.isArray(untransformedJSON) ? untransformedJSON : [\n        untransformedJSON\n    ];\n    const meta = responseMeta?.({\n        ctx,\n        paths,\n        type,\n        data,\n        errors,\n        eagerGeneration\n    }) ?? {};\n    for (const [key, value] of Object.entries(meta.headers ?? {})){\n        headers[key] = value;\n    }\n    if (meta.status) {\n        status = meta.status;\n    }\n    return {\n        status,\n        headers\n    };\n}\nasync function inputToProcedureCall(procedureOpts) {\n    const { opts , ctx , type , input , path  } = procedureOpts;\n    try {\n        const data = await (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e)({\n            procedures: opts.router._def.procedures,\n            path,\n            rawInput: input,\n            ctx,\n            type\n        });\n        return {\n            result: {\n                data\n            }\n        };\n    } catch (cause) {\n        const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n        opts.onError?.({\n            error,\n            path,\n            input,\n            ctx,\n            type: type,\n            req: opts.req\n        });\n        return {\n            error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n                config: opts.router._def._config,\n                error,\n                type,\n                path,\n                input,\n                ctx\n            })\n        };\n    }\n}\nfunction caughtErrorToData(cause, errorOpts) {\n    const { router , req , onError  } = errorOpts.opts;\n    const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n    onError?.({\n        error,\n        path: errorOpts.path,\n        input: errorOpts.input,\n        ctx: errorOpts.ctx,\n        type: errorOpts.type,\n        req\n    });\n    const untransformedJSON = {\n        error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n            config: router._def._config,\n            error,\n            type: errorOpts.type,\n            path: errorOpts.path,\n            input: errorOpts.input,\n            ctx: errorOpts.ctx\n        })\n    };\n    const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON);\n    const body = JSON.stringify(transformedJSON);\n    return {\n        error,\n        untransformedJSON,\n        body\n    };\n}\n// implementation\nasync function resolveHTTPResponse(opts) {\n    const { router , req , unstable_onHead , unstable_onChunk  } = opts;\n    if (req.method === 'HEAD') {\n        // can be used for lambda warmup\n        const headResponse = {\n            status: 204\n        };\n        unstable_onHead?.(headResponse, false);\n        unstable_onChunk?.([\n            -1,\n            ''\n        ]);\n        return headResponse;\n    }\n    const contentTypeHandler = opts.contentTypeHandler ?? fallbackContentTypeHandler;\n    const batchingEnabled = opts.batching?.enabled ?? true;\n    const type = HTTP_METHOD_PROCEDURE_TYPE_MAP[req.method] ?? 'unknown';\n    let ctx = undefined;\n    let paths;\n    const isBatchCall = !!req.query.get('batch');\n    const isStreamCall = isBatchCall && unstable_onHead && unstable_onChunk && req.headers['trpc-batch-mode'] === 'stream';\n    try {\n        // we create context first so that (unless `createContext()` throws)\n        // error handler may access context information\n        //\n        // this way even if the client sends malformed input that might cause an exception:\n        //  - `opts.error` has value,\n        //  - batching is not enabled,\n        //  - `type` is unknown,\n        //  - `getInputs` throws because of malformed JSON,\n        // context value is still available to the error handler\n        ctx = await opts.createContext();\n        if (opts.error) {\n            throw opts.error;\n        }\n        if (isBatchCall && !batchingEnabled) {\n            throw new Error(`Batching is not enabled on the server`);\n        }\n        /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Subscriptions should use wsLink',\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        if (type === 'unknown') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: `Unexpected request method ${req.method}`,\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        const inputs = await contentTypeHandler.getInputs({\n            isBatchCall,\n            req,\n            router,\n            preprocessedBody: opts.preprocessedBody ?? false\n        });\n        paths = isBatchCall ? decodeURIComponent(opts.path).split(',') : [\n            opts.path\n        ];\n        const promises = paths.map((path, index)=>inputToProcedureCall({\n                opts,\n                ctx,\n                type,\n                input: inputs[index],\n                path\n            }));\n        if (!isStreamCall) {\n            /**\n       * Non-streaming response:\n       * - await all responses in parallel, blocking on the slowest one\n       * - create headers with known response body\n       * - return a complete HTTPResponse\n       */ const untransformedJSON = await Promise.all(promises);\n            const errors = untransformedJSON.flatMap((response)=>'error' in response ? [\n                    response.error\n                ] : []);\n            const headResponse1 = initResponse({\n                ctx,\n                paths,\n                type,\n                responseMeta: opts.responseMeta,\n                untransformedJSON,\n                errors\n            });\n            unstable_onHead?.(headResponse1, false);\n            // return body stuff\n            const result = isBatchCall ? untransformedJSON : untransformedJSON[0]; // eslint-disable-line @typescript-eslint/no-non-null-assertion -- `untransformedJSON` should be the length of `paths` which should be at least 1 otherwise there wouldn't be a request at all\n            const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, result);\n            const body = JSON.stringify(transformedJSON);\n            unstable_onChunk?.([\n                -1,\n                body\n            ]);\n            return {\n                status: headResponse1.status,\n                headers: headResponse1.headers,\n                body\n            };\n        }\n        /**\n     * Streaming response:\n     * - block on none, call `onChunk` as soon as each response is ready\n     * - create headers with minimal data (cannot know the response body in advance)\n     * - return void\n     */ const headResponse2 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta\n        });\n        unstable_onHead(headResponse2, true);\n        const indexedPromises = new Map(promises.map((promise, index)=>[\n                index,\n                promise.then((r)=>[\n                        index,\n                        r\n                    ])\n            ]));\n        for (const _ of paths){\n            const [index, untransformedJSON1] = await Promise.race(indexedPromises.values());\n            indexedPromises.delete(index);\n            try {\n                const transformedJSON1 = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON1);\n                const body1 = JSON.stringify(transformedJSON1);\n                unstable_onChunk([\n                    index,\n                    body1\n                ]);\n            } catch (cause) {\n                const path = paths[index];\n                const input = inputs[index];\n                const { body: body2  } = caughtErrorToData(cause, {\n                    opts,\n                    ctx,\n                    type,\n                    path,\n                    input\n                });\n                unstable_onChunk([\n                    index,\n                    body2\n                ]);\n            }\n        }\n        return;\n    } catch (cause1) {\n        // we get here if\n        // - batching is called when it's not enabled\n        // - `createContext()` throws\n        // - `router._def._config.transformer.output.serialize()` throws\n        // - post body is too large\n        // - input deserialization fails\n        // - `errorFormatter` return value is malformed\n        const { error , untransformedJSON: untransformedJSON2 , body: body3  } = caughtErrorToData(cause1, {\n            opts,\n            ctx,\n            type\n        });\n        const headResponse3 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta,\n            untransformedJSON: untransformedJSON2,\n            errors: [\n                error\n            ]\n        });\n        unstable_onHead?.(headResponse3, false);\n        unstable_onChunk?.([\n            -1,\n            body3\n        ]);\n        return {\n            status: headResponse3.status,\n            headers: headResponse3.headers,\n            body: body3\n        };\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/toURL-8f0ea228.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/toURL-8f0ea228.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   t: () => (/* binding */ toURL)\n/* harmony export */ });\nfunction toURL(urlOrPathname) {\n    const url = urlOrPathname.startsWith('/') ? `http://127.0.0.1${urlOrPathname}` : urlOrPathname;\n    return new URL(url);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RvVVJMLThmMGVhMjI4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxtRUFBbUUsY0FBYztBQUNqRjtBQUNBOztBQUVzQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bib2lsZXJwbGF0ZS9uZXh0anMvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RvVVJMLThmMGVhMjI4Lm1qcz9kZTFlIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHRvVVJMKHVybE9yUGF0aG5hbWUpIHtcbiAgICBjb25zdCB1cmwgPSB1cmxPclBhdGhuYW1lLnN0YXJ0c1dpdGgoJy8nKSA/IGBodHRwOi8vMTI3LjAuMC4xJHt1cmxPclBhdGhuYW1lfWAgOiB1cmxPclBhdGhuYW1lO1xuICAgIHJldHVybiBuZXcgVVJMKHVybCk7XG59XG5cbmV4cG9ydCB7IHRvVVJMIGFzIHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getErrorShape),\n/* harmony export */   t: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/../../node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__.T[code],\n        data: {\n            code,\n            httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RTtBQUNIOztBQUVwRTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlCQUF5QjtBQUNyQyxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBLGNBQWMsa0RBQXVCO0FBQ3JDO0FBQ0E7QUFDQSx3QkFBd0Isc0RBQTBCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYm9pbGVycGxhdGUvbmV4dGpzLy4uLy4uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC90cmFuc2Zvcm1UUlBDUmVzcG9uc2UtMTE1M2I0MjEubWpzP2VhZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyBhcyBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciB9IGZyb20gJy4vaW5kZXgtZjkxZDcyMGMubWpzJztcbmltcG9ydCB7IFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gZ2V0RXJyb3JTaGFwZShvcHRzKSB7XG4gICAgY29uc3QgeyBwYXRoICwgZXJyb3IgLCBjb25maWcgIH0gPSBvcHRzO1xuICAgIGNvbnN0IHsgY29kZSAgfSA9IG9wdHMuZXJyb3I7XG4gICAgY29uc3Qgc2hhcGUgPSB7XG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IFRSUENfRVJST1JfQ09ERVNfQllfS0VZW2NvZGVdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgaHR0cFN0YXR1czogZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGlmIChjb25maWcuaXNEZXYgJiYgdHlwZW9mIG9wdHMuZXJyb3Iuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEuc3RhY2sgPSBvcHRzLmVycm9yLnN0YWNrO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEucGF0aCA9IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBjb25maWcuZXJyb3JGb3JtYXR0ZXIoe1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICBzaGFwZVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkge1xuICAgIGlmICgnZXJyb3InIGluIGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLml0ZW0sXG4gICAgICAgICAgICBlcnJvcjogY29uZmlnLnRyYW5zZm9ybWVyLm91dHB1dC5zZXJpYWxpemUoaXRlbS5lcnJvcilcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCdkYXRhJyBpbiBpdGVtLnJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIHJlc3VsdDoge1xuICAgICAgICAgICAgICAgIC4uLml0ZW0ucmVzdWx0LFxuICAgICAgICAgICAgICAgIGRhdGE6IGNvbmZpZy50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKGl0ZW0ucmVzdWx0LmRhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBpdGVtO1xufVxuLyoqXG4gKiBUYWtlcyBhIHVuc2VyaWFsaXplZCBgVFJQQ1Jlc3BvbnNlYCBhbmQgc2VyaWFsaXplcyBpdCB3aXRoIHRoZSByb3V0ZXIncyB0cmFuc2Zvcm1lcnNcbiAqKi8gZnVuY3Rpb24gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKGNvbmZpZywgaXRlbU9ySXRlbXMpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShpdGVtT3JJdGVtcykgPyBpdGVtT3JJdGVtcy5tYXAoKGl0ZW0pPT50cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkpIDogdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlSXRlbShjb25maWcsIGl0ZW1Pckl0ZW1zKTtcbn1cblxuZXhwb3J0IHsgZ2V0RXJyb3JTaGFwZSBhcyBnLCB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgYXMgdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\n");

/***/ })

};
;